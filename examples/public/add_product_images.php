<?php
/**
 * Example: Th√™m ·∫£nh s·∫£n ph·∫©m t·ª´ CDN b√™n ngo√†i
 *
 * File n√†y demo c√°ch s·ª≠ d·ª•ng SDK ƒë·ªÉ th√™m ·∫£nh s·∫£n ph·∫©m
 * t·ª´ CDN b√™n ngo√†i v√†o h·ªá th·ªëng Nhanh.vn
 *
 * @package Puleeno\NhanhVn\Examples
 * @author Puleeno
 * @since 1.0.0
 */

require_once __DIR__ . '/../../vendor/autoload.php';

use Puleeno\NhanhVn\Client\NhanhVnClient;
use Puleeno\NhanhVn\Config\ClientConfig;
use Puleeno\NhanhVn\Services\Logger\MonologAdapter;
use Monolog\Logger;
use Monolog\Handler\StreamHandler;

// C·∫•u h√¨nh logging
$logger = new Logger('nhanh-vn-sdk');
$logger->pushHandler(new StreamHandler(__DIR__ . '/../../logs/nhanh-vn-sdk.log', Logger::DEBUG));

// C·∫•u h√¨nh client
$config = new ClientConfig([
    'appId' => 'your_app_id',
    'businessId' => 'your_business_id',
    'accessToken' => 'your_access_token',
    'apiVersion' => '2.0',
    'baseUrl' => 'https://pos.open.nhanh.vn',
    'timeout' => 30,
    'retryAttempts' => 3,
    'retryDelay' => 1000,
]);

// Kh·ªüi t·∫°o client
$client = new NhanhVnClient($config, new MonologAdapter($logger));

// L·∫•y product module
$productModule = $client->products();

echo "<h1>Demo: Th√™m ·∫£nh s·∫£n ph·∫©m t·ª´ CDN b√™n ngo√†i</h1>\n";
echo "<hr>\n";

try {
    // Example 1: Th√™m ·∫£nh cho m·ªôt s·∫£n ph·∫©m
    echo "<h2>1. Th√™m ·∫£nh cho m·ªôt s·∫£n ph·∫©m</h2>\n";

    $singleProductData = [
        'productId' => 312311,
        'externalImages' => [
            'https://external.cdn.com/product/image1.jpg',
            'https://external.cdn.com/product/image2.jpg',
            'https://external.cdn.com/product/image3.jpg'
        ],
        'mode' => 'update' // C√≥ th·ªÉ l√† 'update' ho·∫∑c 'deleteall'
    ];

    echo "<h3>D·ªØ li·ªáu s·∫£n ph·∫©m:</h3>\n";
    echo "<pre>" . json_encode($singleProductData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>\n";

    // Validate d·ªØ li·ªáu tr∆∞·ªõc khi g·ª≠i
    if ($productModule->validateExternalImageRequest($singleProductData)) {
        echo "<p style='color: green;'>‚úÖ D·ªØ li·ªáu h·ª£p l·ªá</p>\n";

        // G·ªçi API th√™m ·∫£nh
        $response = $productModule->addExternalImage($singleProductData);

        echo "<h3>K·∫øt qu·∫£:</h3>\n";
        echo "<p><strong>Th√†nh c√¥ng:</strong> " . ($response->isSuccess() ? 'C√≥' : 'Kh√¥ng') . "</p>\n";
        echo "<p><strong>M√£ k·∫øt qu·∫£:</strong> " . $response->getCode() . "</p>\n";
        echo "<p><strong>S·ªë s·∫£n ph·∫©m ƒë√£ x·ª≠ l√Ω:</strong> " . $response->getTotalProcessedProducts() . "</p>\n";

        if ($response->isSuccess()) {
            echo "<p><strong>ID s·∫£n ph·∫©m ƒë√£ x·ª≠ l√Ω:</strong> " . implode(', ', $response->getAllProcessedProductIds()) . "</p>\n";
        } else {
            echo "<p><strong>L·ªói:</strong> " . $response->getAllMessagesAsString() . "</p>\n";
        }

        echo "<h3>Th√¥ng tin t√≥m t·∫Øt:</h3>\n";
        echo "<pre>" . json_encode($response->getSummary(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>\n";

    } else {
        echo "<p style='color: red;'>‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá</p>\n";
    }

    echo "<hr>\n";

    // Example 2: Th√™m ·∫£nh cho nhi·ªÅu s·∫£n ph·∫©m c√πng l√∫c (batch)
    echo "<h2>2. Th√™m ·∫£nh cho nhi·ªÅu s·∫£n ph·∫©m c√πng l√∫c (Batch)</h2>\n";

    $batchProductsData = [
        [
            'productId' => 312311,
            'externalImages' => [
                'https://external.cdn.com/product/image1.jpg',
                'https://external.cdn.com/product/image2.jpg'
            ],
            'mode' => 'update'
        ],
        [
            'productId' => 312312,
            'externalImages' => [
                'https://external.cdn.com/product/image3.jpg',
                'https://external.cdn.com/product/image4.jpg',
                'https://external.cdn.com/product/image5.jpg'
            ],
            'mode' => 'update'
        ],
        [
            'productId' => 312313,
            'externalImages' => [
                'https://external.cdn.com/product/image6.jpg'
            ],
            'mode' => 'deleteall' // X√≥a t·∫•t c·∫£ ·∫£nh c≈© v√† th√™m ·∫£nh m·ªõi
        ]
    ];

    echo "<h3>D·ªØ li·ªáu batch:</h3>\n";
    echo "<pre>" . json_encode($batchProductsData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>\n";

    // Validate d·ªØ li·ªáu batch
    $validationErrors = $productModule->validateExternalImageRequests($batchProductsData);

    if (empty($validationErrors)) {
        echo "<p style='color: green;'>‚úÖ T·∫•t c·∫£ d·ªØ li·ªáu ƒë·ªÅu h·ª£p l·ªá</p>\n";

        // G·ªçi API th√™m ·∫£nh batch
        $batchResponse = $productModule->addExternalImages($batchProductsData);

        echo "<h3>K·∫øt qu·∫£ batch:</h3>\n";
        echo "<p><strong>Th√†nh c√¥ng:</strong> " . ($batchResponse->isSuccess() ? 'C√≥' : 'Kh√¥ng') . "</p>\n";
        echo "<p><strong>M√£ k·∫øt qu·∫£:</strong> " . $batchResponse->getCode() . "</p>\n";
        echo "<p><strong>S·ªë s·∫£n ph·∫©m ƒë√£ x·ª≠ l√Ω:</strong> " . $batchResponse->getTotalProcessedProducts() . "</p>\n";

        if ($batchResponse->isSuccess()) {
            echo "<p><strong>ID s·∫£n ph·∫©m ƒë√£ x·ª≠ l√Ω:</strong> " . implode(', ', $batchResponse->getAllProcessedProductIds()) . "</p>\n";
        } else {
            echo "<p><strong>L·ªói:</strong> " . $batchResponse->getAllMessagesAsString() . "</p>\n";
        }

        echo "<h3>Th√¥ng tin t√≥m t·∫Øt batch:</h3>\n";
        echo "<pre>" . json_encode($batchResponse->getSummary(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>\n";

    } else {
        echo "<p style='color: red;'>‚ùå C√≥ l·ªói validation:</p>\n";
        echo "<ul>\n";
        foreach ($validationErrors as $error) {
            echo "<li style='color: red;'>{$error}</li>\n";
        }
        echo "</ul>\n";
    }

    echo "<hr>\n";

    // Example 3: Demo c√°c tr∆∞·ªùng h·ª£p l·ªói validation
    echo "<h2>3. Demo c√°c tr∆∞·ªùng h·ª£p l·ªói validation</h2>\n";

    $invalidDataExamples = [
        [
            'name' => 'Thi·∫øu productId',
            'data' => [
                'externalImages' => ['https://example.com/image.jpg']
            ]
        ],
        [
            'name' => 'Thi·∫øu externalImages',
            'data' => [
                'productId' => 123
            ]
        ],
        [
            'name' => 'productId kh√¥ng ph·∫£i s·ªë',
            'data' => [
                'productId' => 'invalid_id',
                'externalImages' => ['https://example.com/image.jpg']
            ]
        ],
        [
            'name' => 'Qu√° nhi·ªÅu ·∫£nh (t·ªëi ƒëa 20)',
            'data' => [
                'productId' => 123,
                'externalImages' => array_fill(0, 25, 'https://example.com/image.jpg')
            ]
        ],
        [
            'name' => 'URL ·∫£nh kh√¥ng h·ª£p l·ªá',
            'data' => [
                'productId' => 123,
                'externalImages' => ['invalid_url', 'https://example.com/image.jpg']
            ]
        ],
        [
            'name' => 'Mode kh√¥ng h·ª£p l·ªá',
            'data' => [
                'productId' => 123,
                'externalImages' => ['https://example.com/image.jpg'],
                'mode' => 'invalid_mode'
            ]
        ]
    ];

    foreach ($invalidDataExamples as $example) {
        echo "<h4>{$example['name']}:</h4>\n";
        echo "<pre>" . json_encode($example['data'], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>\n";

        $isValid = $productModule->validateExternalImageRequest($example['data']);
        echo "<p style='color: " . ($isValid ? 'green' : 'red') . ";'>" .
             ($isValid ? '‚úÖ H·ª£p l·ªá' : '‚ùå Kh√¥ng h·ª£p l·ªá') . "</p>\n";
        echo "<br>\n";
    }

    echo "<hr>\n";

    // Example 4: Demo gi·ªõi h·∫°n batch size
    echo "<h2>4. Demo gi·ªõi h·∫°n batch size (t·ªëi ƒëa 10 s·∫£n ph·∫©m)</h2>\n";

    $largeBatchData = array_fill(0, 12, [
        'productId' => rand(100000, 999999),
        'externalImages' => ['https://example.com/image.jpg']
    ]);

    echo "<p><strong>S·ªë s·∫£n ph·∫©m trong batch:</strong> " . count($largeBatchData) . "</p>\n";

    try {
        $largeBatchResponse = $productModule->addExternalImages($largeBatchData);
        echo "<p style='color: green;'>‚úÖ Batch x·ª≠ l√Ω th√†nh c√¥ng</p>\n";
    } catch (\InvalidArgumentException $e) {
        echo "<p style='color: red;'>‚ùå L·ªói: " . htmlspecialchars($e->getMessage()) . "</p>\n";
    }

} catch (Exception $e) {
    echo "<h2>‚ùå L·ªói x·∫£y ra:</h2>\n";
    echo "<p style='color: red;'><strong>Message:</strong> " . htmlspecialchars($e->getMessage()) . "</p>\n";
    echo "<p style='color: red;'><strong>File:</strong> " . htmlspecialchars($e->getFile()) . "</p>\n";
    echo "<p style='color: red;'><strong>Line:</strong> " . $e->getLine() . "</p>\n";

    if ($logger) {
        $logger->error('Error in add_product_images example', [
            'message' => $e->getMessage(),
            'file' => $e->getFile(),
            'line' => $e->getLine(),
            'trace' => $e->getTraceAsString()
        ]);
    }
}

echo "<hr>\n";
echo "<h2>üìö T√†i li·ªáu tham kh·∫£o:</h2>\n";
echo "<ul>\n";
echo "<li><strong>API Endpoint:</strong> /api/product/externalimage</li>\n";
echo "<li><strong>Gi·ªõi h·∫°n:</strong> T·ªëi ƒëa 10 s·∫£n ph·∫©m m·ªói request, m·ªói s·∫£n ph·∫©m t·ªëi ƒëa 20 ·∫£nh</li>\n";
echo "<li><strong>Mode:</strong> 'update' (m·∫∑c ƒë·ªãnh) ho·∫∑c 'deleteall'</li>\n";
echo "<li><strong>L∆∞u √Ω:</strong> Nhanh.vn s·∫Ω kh√¥ng t·∫£i ·∫£nh v·ªÅ m√† d√πng tr·ª±c ti·∫øp URL t·ª´ CDN</li>\n";
echo "</ul>\n";

// Gi·∫£i ph√≥ng memory
unset($client, $productModule, $config, $logger);
