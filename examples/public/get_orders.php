<?php
/**
 * Example: L·∫•y danh s√°ch ƒë∆°n h√†ng t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK
 */

require_once __DIR__ . '/../boot/client.php';

// HTML header
?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üì¶ L·∫•y ƒë∆°n h√†ng t·ª´ Nhanh.vn API</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>üì¶ L·∫•y danh s√°ch ƒë∆°n h√†ng t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK</h1>
        <hr>

        <div class="section">
            <h2>üìã Th√¥ng tin Debug</h2>
            <div class="debug-info">
                <p><strong>Script:</strong> <?php echo htmlspecialchars(__FILE__); ?></p>
                <p><strong>Time:</strong> <?php echo date('Y-m-d H:i:s'); ?></p>
                <p><strong>PHP Version:</strong> <?php echo PHP_VERSION; ?></p>
            </div>
        </div>

<?php

try {
    // Ki·ªÉm tra xem client c√≥ s·∫µn s√†ng kh√¥ng
    if (!isClientReady()) {
        echo '<div class="status error">';
        echo '<h3>‚ùå Ch∆∞a c√≥ access token</h3>';
        echo '<p>H√£y ch·∫°y OAuth flow tr∆∞·ªõc!</p>';
        echo '<p><a href="index.php" class="btn btn-primary">üîê Ch·∫°y OAuth Flow</a></p>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }

    // Hi·ªÉn th·ªã th√¥ng tin client
    $clientInfo = getClientInfo();
    echo '<div class="status success">';
    echo '<h3>‚úÖ ƒê√£ c√≥ access token</h3>';
    echo '<p><strong>Token:</strong> ' . htmlspecialchars($clientInfo['accessTokenPreview']) . '</p>';
    echo '</div>';

    // Kh·ªüi t·∫°o SDK client
    echo '<div class="section">';
    echo '<h3>üöÄ Kh·ªüi t·∫°o SDK Client</h3>';

    try {
        // S·ª≠ d·ª•ng boot file ƒë·ªÉ kh·ªüi t·∫°o client
        $client = bootNhanhVnClientSilent();

        echo '<div class="status success">';
        echo '<h4>‚úÖ SDK client ƒë√£ s·∫µn s√†ng!</h4>';
        echo '<p><strong>Logger:</strong> NullLogger (kh√¥ng log)</p>';
        echo '</div>';

    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói kh·ªüi t·∫°o SDK</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }
    echo '</div>';

    // L·∫•y danh s√°ch ƒë∆°n h√†ng s·ª≠ d·ª•ng SDK
    echo '<div class="section">';
    echo '<h3>üîÑ L·∫•y danh s√°ch ƒë∆°n h√†ng qua SDK</h3>';

    try {
        // DEBUG: Ki·ªÉm tra Order module
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Order Module:</h4>';

        $orderModule = $client->orders();
        echo '<p><strong>Order Module Class:</strong> ' . get_class($orderModule) . '</p>';
        echo '<p><strong>Order Module Methods:</strong></p>';
        echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($orderModule))) . '</pre>';
        echo '</div>';

        // DEBUG: Ki·ªÉm tra search method
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Search Method:</h4>';

        $searchCriteria = [
            'page' => 1,
            'icpp' => 10,
            'fromDate' => date('Y-m-d', strtotime('-7 days')),
            'toDate' => date('Y-m-d')
        ];
        echo '<p><strong>Search Criteria:</strong></p>';
        echo '<pre>' . htmlspecialchars(json_encode($searchCriteria, JSON_PRETTY_PRINT)) . '</pre>';
        echo '</div>';

        // S·ª≠ d·ª•ng Order module c·ªßa SDK
        echo '<div class="debug-info">';
        echo '<h4>üîÑ ƒêang g·ªçi OrderModule::search()...</h4>';
        echo '</div>';

        $orders = $client->orders()->search($searchCriteria);

        // DEBUG: Ki·ªÉm tra k·∫øt qu·∫£ tr·∫£ v·ªÅ
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Search Result:</h4>';
        echo '<p><strong>Result Type:</strong> ' . gettype($orders) . '</p>';
        echo '<p><strong>Result Class:</strong> ' . (is_object($orders) ? get_class($orders) : 'N/A') . '</p>';
        echo '<p><strong>Result Count:</strong> ' . (is_countable($orders) ? count($orders) : 'N/A') . '</p>';
        echo '<p><strong>Result Empty:</strong> ' . (empty($orders) ? 'Yes' : 'No') . '</p>';
        echo '<p><strong>Result Null:</strong> ' . (is_null($orders) ? 'Yes' : 'No') . '</p>';

        if (is_object($orders)) {
            echo '<p><strong>Result Methods:</strong></p>';
            echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($orders))) . '</pre>';
        }

        echo '<p><strong>Raw Result:</strong></p>';
        echo '<pre>' . htmlspecialchars(print_r($orders, true)) . '</pre>';
        echo '</div>';

        // L·∫•y orders collection t·ª´ response
        $ordersCollection = $orders->getOrders();
        $orderCount = $ordersCollection->count();

        if ($orderCount === 0) {
            echo '<div class="status warning">';
            echo '<h4>üì≠ Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o</h4>';
            echo '<p><strong>L√Ω do c√≥ th·ªÉ:</strong></p>';
            echo '<ul>';
            echo '<li>OrderModule::search() ch∆∞a implement API call th·∫≠t</li>';
            echo '<li>API Nhanh.vn tr·∫£ v·ªÅ empty data</li>';
            echo '<li>Collection object r·ªóng</li>';
            echo '</ul>';
            echo '</div>';
        } else {
            echo '<div class="status success">';
            echo '<h4>üì¶ T√¨m th·∫•y ' . $orderCount . ' ƒë∆°n h√†ng</h4>';
            echo '<p><strong>T·ªïng s·ªë b·∫£n ghi:</strong> ' . $orders->getTotalRecords() . '</p>';
            echo '<p><strong>Trang hi·ªán t·∫°i:</strong> ' . $orders->getPage() . ' / ' . $orders->getTotalPages() . '</p>';
            echo '</div>';

            echo '<div class="orders-list">';
            foreach ($ordersCollection as $orderId => $order) {
                $num = $ordersCollection->search($order) + 1;
                echo '<div class="order-item">';
                echo '<h5>' . $num . '. ƒê∆°n h√†ng #' . htmlspecialchars($order->getId() ?? 'N/A') . '</h5>';
                echo '<ul>';
                echo '<li><strong>ID:</strong> ' . htmlspecialchars($order->getId() ?? 'N/A') . '</li>';
                echo '<li><strong>Kh√°ch h√†ng:</strong> ' . htmlspecialchars($order->getCustomerName() ?? 'N/A') . '</li>';
                echo '<li><strong>SƒêT:</strong> ' . htmlspecialchars($order->getCustomerMobile() ?? 'N/A') . '</li>';
                echo '<li><strong>T·ªïng ti·ªÅn:</strong> ' . number_format($order->getCalcTotalMoney() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>Ph√≠ ship:</strong> ' . number_format($order->getShipFee() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>Tr·∫°ng th√°i:</strong> ' . htmlspecialchars($order->getStatusName() ?? 'N/A') . '</li>';
                echo '<li><strong>Lo·∫°i:</strong> ' . htmlspecialchars($order->getType() ?? 'N/A') . '</li>';
                echo '<li><strong>Ng√†y t·∫°o:</strong> ' . htmlspecialchars($order->getCreatedDateTime() ?? 'N/A') . '</li>';
                echo '<li><strong>Ng√†y giao:</strong> ' . htmlspecialchars($order->getDeliveryDate() ?? 'N/A') . '</li>';
                echo '<li><strong>K√™nh b√°n:</strong> ' . htmlspecialchars($order->getSaleChannelName() ?? 'N/A') . '</li>';
                echo '</ul>';
                echo '</div>';
            }
            echo '</div>';
        }
    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói khi l·∫•y ƒë∆°n h√†ng</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
    }

    echo '</div>';

    // Demo c√°c method kh√°c c·ªßa Order Module
    echo '<div class="section">';
    echo '<h3>üîç Demo c√°c method kh√°c c·ªßa Order Module</h3>';

    try {
        echo '<div class="debug-info">';
        echo '<h4>üîÑ ƒêang test c√°c method kh√°c...</h4>';
        echo '</div>';

        // Test getAll method
        echo '<div class="method-test">';
        echo '<h4>üìã Test getAll() method:</h4>';
        try {
            $allOrders = $client->orders()->getAll();
            $allOrdersCollection = $allOrders->getOrders();
            echo '<p><strong>‚úÖ getAll() th√†nh c√¥ng:</strong> ' . $allOrdersCollection->count() . ' ƒë∆°n h√†ng</p>';
        } catch (Exception $e) {
            echo '<p><strong>‚ùå getAll() l·ªói:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        }
        echo '</div>';

        // Test getByType method
        echo '<div class="method-test">';
        echo '<h4>üìã Test getByType() method:</h4>';
        try {
            $shippingOrders = $client->orders()->getByType(1); // Giao h√†ng t·∫≠n nh√†
            $shippingOrdersCollection = $shippingOrders->getOrders();
            echo '<p><strong>‚úÖ getByType(1) th√†nh c√¥ng:</strong> ' . $shippingOrdersCollection->count() . ' ƒë∆°n giao h√†ng</p>';
        } catch (Exception $e) {
            echo '<p><strong>‚ùå getByType(1) l·ªói:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        }
        echo '</div>';

        // Test getByStatuses method
        echo '<div class="method-test">';
        echo '<h4>üìã Test getByStatuses() method:</h4>';
        try {
            $statusOrders = $client->orders()->getByStatuses(['pending', 'processing']);
            $statusOrdersCollection = $statusOrders->getOrders();
            echo '<p><strong>‚úÖ getByStatuses() th√†nh c√¥ng:</strong> ' . $statusOrdersCollection->count() . ' ƒë∆°n theo tr·∫°ng th√°i</p>';
        } catch (Exception $e) {
            echo '<p><strong>‚ùå getByStatuses() l·ªói:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        }
        echo '</div>';

        // Test cache methods
        echo '<div class="method-test">';
        echo '<h4>üìã Test Cache Methods:</h4>';
        try {
            $cacheStatus = $client->orders()->getCacheStatus();
            $isCacheAvailable = $client->orders()->isCacheAvailable();
            echo '<p><strong>‚úÖ Cache Status:</strong> ' . htmlspecialchars(json_encode($cacheStatus)) . '</p>';
            echo '<p><strong>‚úÖ Is Cache Available:</strong> ' . ($isCacheAvailable ? 'Yes' : 'No') . '</p>';
        } catch (Exception $e) {
            echo '<p><strong>‚ùå Cache methods l·ªói:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        }
        echo '</div>';

    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói khi test c√°c method kh√°c</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '</div>';
    }

    echo '</div>';

} catch (Exception $e) {
    echo '<div class="status error">';
    echo '<h3>‚ùå L·ªói chung</h3>';
    echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
    echo '<p><strong>Stack trace:</strong></p>';
    echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
    echo '</div>';
}

// HTML footer
?>
        <div class="section">
            <h3>üîó Navigation</h3>
            <p><a href="index.php" class="btn btn-primary">üè† V·ªÅ trang ch·ªß</a></p>
            <p><a href="callback.php" class="btn btn-secondary">üîÑ Test OAuth Callback</a></p>
            <p><a href="get_products.php" class="btn btn-secondary">üõçÔ∏è L·∫•y s·∫£n ph·∫©m</a></p>
        </div>
    </div>
</body>
</html>
