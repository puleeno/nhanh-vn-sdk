<?php
/**
 * Example: L·∫•y danh s√°ch ƒë·ªãa ƒëi·ªÉm (th√†nh ph·ªë, qu·∫≠n huy·ªán, ph∆∞·ªùng x√£) t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK
 */

require_once __DIR__ . '/../boot/client.php';

// HTML header
?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üó∫Ô∏è L·∫•y ƒë·ªãa ƒëi·ªÉm t·ª´ Nhanh.vn API</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>üó∫Ô∏è L·∫•y danh s√°ch ƒë·ªãa ƒëi·ªÉm t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK</h1>
        <hr>

        <div class="section">
            <h2>üìã Th√¥ng tin Debug</h2>
            <div class="debug-info">
                <p><strong>Script:</strong> <?php echo htmlspecialchars(__FILE__); ?></p>
                <p><strong>Time:</strong> <?php echo date('Y-m-d H:i:s'); ?></p>
                <p><strong>PHP Version:</strong> <?php echo PHP_VERSION; ?></p>
            </div>
        </div>

<?php

try {
    // Ki·ªÉm tra xem client c√≥ s·∫µn s√†ng kh√¥ng
    if (!isClientReady()) {
        echo '<div class="status error">';
        echo '<h3>‚ùå Ch∆∞a c√≥ access token</h3>';
        echo '<p>H√£y ch·∫°y OAuth flow tr∆∞·ªõc!</p>';
        echo '<p><a href="index.php" class="btn btn-primary">üîê Ch·∫°y OAuth Flow</a></p>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }

    // Hi·ªÉn th·ªã th√¥ng tin client
    $clientInfo = getClientInfo();
    echo '<div class="status success">';
    echo '<h3>‚úÖ ƒê√£ c√≥ access token</h3>';
    echo '<p><strong>Token:</strong> ' . htmlspecialchars($clientInfo['accessTokenPreview']) . '</p>';
    echo '</div>';

    // Kh·ªüi t·∫°o SDK client
    echo '<div class="section">';
    echo '<h3>üöÄ Kh·ªüi t·∫°o SDK Client</h3>';

    try {
        // S·ª≠ d·ª•ng boot file ƒë·ªÉ kh·ªüi t·∫°o client
        $client = bootNhanhVnClientSilent();

        echo '<div class="status success">';
        echo '<h4>‚úÖ SDK client ƒë√£ s·∫µn s√†ng!</h4>';
        echo '<p><strong>Logger:</strong> NullLogger (kh√¥ng log)</p>';
        echo '</div>';

    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói kh·ªüi t·∫°o SDK</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }
    echo '</div>';

    // L·∫•y danh s√°ch th√†nh ph·ªë s·ª≠ d·ª•ng SDK
    echo '<div class="section">';
    echo '<h3>üèôÔ∏è L·∫•y danh s√°ch th√†nh ph·ªë qua SDK</h3>';

    try {
        // DEBUG: Ki·ªÉm tra Shipping module
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Shipping Module:</h4>';

        $shippingModule = $client->shipping();
        echo '<p><strong>Shipping Module Class:</strong> ' . get_class($shippingModule) . '</p>';
        echo '<p><strong>Shipping Module Methods:</strong></p>';
        echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($shippingModule))) . '</pre>';
        echo '</div>';

        // S·ª≠ d·ª•ng Shipping module c·ªßa SDK ƒë·ªÉ t√¨m ki·∫øm th√†nh ph·ªë
        echo '<div class="debug-info">';
        echo '<h4>üîÑ ƒêang g·ªçi ShippingModule::searchCities()...</h4>';
        echo '</div>';

        $cities = $client->shipping()->searchCities();

        // DEBUG: Ki·ªÉm tra k·∫øt qu·∫£ tr·∫£ v·ªÅ
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Search Cities Result:</h4>';
        echo '<p><strong>Result Type:</strong> ' . gettype($cities) . '</p>';
        echo '<p><strong>Result Class:</strong> ' . (is_object($cities) ? get_class($cities) : 'N/A') . '</p>';
        echo '<p><strong>Result Count:</strong> ' . (is_countable($cities) ? count($cities) : 'N/A') . '</p>';
        echo '<p><strong>Result Empty:</strong> ' . (empty($cities) ? 'Yes' : 'No') . '</p>';
        echo '<p><strong>Result Null:</strong> ' . (is_null($cities) ? 'Yes' : 'No') . '</p>';

        if (is_object($cities)) {
            echo '<p><strong>Result Methods:</strong></p>';
            echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($cities))) . '</pre>';
        }

        echo '<p><strong>Raw Result:</strong></p>';
        echo '<pre>' . htmlspecialchars(print_r($cities, true)) . '</pre>';
        echo '</div>';

        if (empty($cities) || $cities->isEmpty()) {
            echo '<div class="status warning">';
            echo '<h4>üì≠ Kh√¥ng c√≥ th√†nh ph·ªë n√†o</h4>';
            echo '<p><strong>L√Ω do c√≥ th·ªÉ:</strong></p>';
            echo '<ul>';
            echo '<li>ShippingModule::searchCities() ch∆∞a implement API call th·∫≠t</li>';
            echo '<li>API Nhanh.vn tr·∫£ v·ªÅ empty data</li>';
            echo '<li>Response object r·ªóng</li>';
            echo '</ul>';
            echo '</div>';
        } else {
            echo '<div class="status success">';
            echo '<h4>üèôÔ∏è T√¨m th·∫•y ' . $cities->getCount() . ' th√†nh ph·ªë</h4>';
            echo '</div>';

            echo '<div class="locations-list">';
            foreach ($cities->getData() as $index => $city) {
                $num = $index + 1;
                echo '<div class="location-item">';
                echo '<h5>' . $num . '. ' . htmlspecialchars($city->getName()) . '</h5>';
                echo '<ul>';
                echo '<li><strong>ID:</strong> ' . htmlspecialchars($city->getId()) . '</li>';
                echo '<li><strong>Lo·∫°i:</strong> ' . htmlspecialchars($city->getType()) . '</li>';
                echo '<li><strong>Parent ID:</strong> ' . htmlspecialchars($city->getParentId() ?? 'N/A') . '</li>';
                echo '</ul>';
                echo '</div>';
            }
            echo '</div>';
        }
    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói khi l·∫•y danh s√°ch th√†nh ph·ªë</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
    }

    echo '</div>';

    // L·∫•y danh s√°ch qu·∫≠n huy·ªán c·ªßa H√† N·ªôi (ID = 2)
    echo '<div class="section">';
    echo '<h3>üèòÔ∏è L·∫•y danh s√°ch qu·∫≠n huy·ªán c·ªßa H√† N·ªôi qua SDK</h3>';

    try {
        echo '<div class="debug-info">';
        echo '<h4>üîÑ ƒêang g·ªçi ShippingModule::searchDistricts(1)...</h4>';
        echo '</div>';

        $districts = $client->shipping()->searchDistricts(1);

        if (empty($districts) || $districts->isEmpty()) {
            echo '<div class="status warning">';
            echo '<h4>üì≠ Kh√¥ng c√≥ qu·∫≠n huy·ªán n√†o</h4>';
            echo '</div>';
        } else {
            echo '<div class="status success">';
            echo '<h4>üèòÔ∏è T√¨m th·∫•y ' . $districts->getCount() . ' qu·∫≠n huy·ªán c·ªßa H√† N·ªôi</h4>';
            echo '</div>';

            echo '<div class="locations-list">';
            foreach ($districts->getData() as $index => $district) {
                $num = $index + 1;
                echo '<div class="location-item">';
                echo '<h5>' . $num . '. ' . htmlspecialchars($district->getName()) . '</h5>';
                echo '<ul>';
                echo '<li><strong>ID:</strong> ' . htmlspecialchars($district->getId()) . '</li>';
                echo '<li><strong>Lo·∫°i:</strong> ' . htmlspecialchars($district->getType()) . '</li>';
                echo '<li><strong>Parent ID:</strong> ' . htmlspecialchars($district->getParentId()) . '</li>';
                echo '</ul>';
                echo '</div>';
            }
            echo '</div>';
        }
    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói khi l·∫•y danh s√°ch qu·∫≠n huy·ªán</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
    }

    echo '</div>';

    // T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm theo t√™n
    echo '<div class="section">';
    echo '<h3>üîç T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm theo t√™n qua SDK</h3>';

    try {
        echo '<div class="debug-info">';
        echo '<h4>üîÑ ƒêang g·ªçi ShippingModule::searchByName("H√†")...</h4>';
        echo '</div>';

        $searchResults = $client->shipping()->searchByName("H√†", "CITY");

        if (empty($searchResults) || $searchResults->isEmpty()) {
            echo '<div class="status warning">';
            echo '<h4>üì≠ Kh√¥ng t√¨m th·∫•y ƒë·ªãa ƒëi·ªÉm n√†o</h4>';
            echo '</div>';
        } else {
            echo '<div class="status success">';
            echo '<h4>üîç T√¨m th·∫•y ' . $searchResults->getCount() . ' ƒë·ªãa ƒëi·ªÉm ch·ª©a "H√†"</h4>';
            echo '</div>';

            echo '<div class="locations-list">';
            foreach ($searchResults->getData() as $index => $location) {
                $num = $index + 1;
                echo '<div class="location-item">';
                echo '<h5>' . $num . '. ' . htmlspecialchars($location->getName()) . '</h5>';
                echo '<ul>';
                echo '<li><strong>ID:</strong> ' . htmlspecialchars($location->getId()) . '</li>';
                echo '<li><strong>Lo·∫°i:</strong> ' . htmlspecialchars($location->getType()) . '</li>';
                echo '<li><strong>Parent ID:</strong> ' . htmlspecialchars($location->getParentId() ?? 'N/A') . '</li>';
                echo '</ul>';
                echo '</div>';
            }
            echo '</div>';
        }
    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói khi t√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
    }

    echo '</div>';

} catch (Exception $e) {
    echo '<div class="status error">';
    echo '<h3>‚ùå L·ªói chung</h3>';
    echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
    echo '<p><strong>Stack trace:</strong></p>';
    echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
    echo '</div>';
}

// HTML footer
?>
        <div class="section">
            <h3>üîó Navigation</h3>
            <p><a href="index.php" class="btn btn-primary">üè† V·ªÅ trang ch·ªß</a></p>
            <p><a href="callback.php" class="btn btn-secondary">üîÑ Test OAuth Callback</a></p>
        </div>
    </div>
</body>
</html>
