<?php
/**
 * Example: L·∫•y 10 s·∫£n ph·∫©m t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK
 */

require_once __DIR__ . '/../boot/client.php';

// HTML header
?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üõçÔ∏è L·∫•y s·∫£n ph·∫©m t·ª´ Nhanh.vn API</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>üõçÔ∏è L·∫•y 10 s·∫£n ph·∫©m t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK</h1>
        <hr>

        <div class="section">
            <h2>üìã Th√¥ng tin Debug</h2>
            <div class="debug-info">
                <p><strong>Script:</strong> <?php echo htmlspecialchars(__FILE__); ?></p>
                <p><strong>Time:</strong> <?php echo date('Y-m-d H:i:s'); ?></p>
                <p><strong>PHP Version:</strong> <?php echo PHP_VERSION; ?></p>
            </div>
        </div>

<?php

try {
    // Ki·ªÉm tra xem client c√≥ s·∫µn s√†ng kh√¥ng
    if (!isClientReady()) {
        echo '<div class="status error">';
        echo '<h3>‚ùå Ch∆∞a c√≥ access token</h3>';
        echo '<p>H√£y ch·∫°y OAuth flow tr∆∞·ªõc!</p>';
        echo '<p><a href="index.php" class="btn btn-primary">üîê Ch·∫°y OAuth Flow</a></p>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }

    // Hi·ªÉn th·ªã th√¥ng tin client
    $clientInfo = getClientInfo();
    echo '<div class="status success">';
    echo '<h3>‚úÖ ƒê√£ c√≥ access token</h3>';
    echo '<p><strong>Token:</strong> ' . htmlspecialchars($clientInfo['accessTokenPreview']) . '</p>';
    echo '</div>';

    // Kh·ªüi t·∫°o SDK client
    echo '<div class="section">';
    echo '<h3>üöÄ Kh·ªüi t·∫°o SDK Client</h3>';

    try {
        // S·ª≠ d·ª•ng boot file ƒë·ªÉ kh·ªüi t·∫°o client
        $client = bootNhanhVnClientSilent();

        echo '<div class="status success">';
        echo '<h4>‚úÖ SDK client ƒë√£ s·∫µn s√†ng!</h4>';
        echo '<p><strong>Logger:</strong> NullLogger (kh√¥ng log)</p>';
        echo '</div>';

    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói kh·ªüi t·∫°o SDK</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }
    echo '</div>';

    // L·∫•y danh s√°ch s·∫£n ph·∫©m s·ª≠ d·ª•ng SDK
    echo '<div class="section">';
    echo '<h3>üîÑ L·∫•y danh s√°ch s·∫£n ph·∫©m qua SDK</h3>';

    try {
        // DEBUG: Ki·ªÉm tra Product module
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Product Module:</h4>';

        $productModule = $client->products();
        echo '<p><strong>Product Module Class:</strong> ' . get_class($productModule) . '</p>';
        echo '<p><strong>Product Module Methods:</strong></p>';
        echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($productModule))) . '</pre>';
        echo '</div>';

        // DEBUG: Ki·ªÉm tra search method
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Search Method:</h4>';

        $searchCriteria = [];
        echo '<p><strong>Search Criteria:</strong></p>';
        echo '<pre>' . htmlspecialchars(json_encode($searchCriteria, JSON_PRETTY_PRINT)) . '</pre>';
        echo '</div>';

        // S·ª≠ d·ª•ng Product module c·ªßa SDK
        echo '<div class="debug-info">';
        echo '<h4>üîÑ ƒêang g·ªçi ProductModule::search()...</h4>';
        echo '</div>';

        $products = $client->products()->search($searchCriteria);

        // DEBUG: Ki·ªÉm tra k·∫øt qu·∫£ tr·∫£ v·ªÅ
        echo '<div class="debug-info">';
        echo '<h4>üîç Debug Search Result:</h4>';
        echo '<p><strong>Result Type:</strong> ' . gettype($products) . '</p>';
        echo '<p><strong>Result Class:</strong> ' . (is_object($products) ? get_class($products) : 'N/A') . '</p>';
        echo '<p><strong>Result Count:</strong> ' . (is_countable($products) ? count($products) : 'N/A') . '</p>';
        echo '<p><strong>Result Empty:</strong> ' . (empty($products) ? 'Yes' : 'No') . '</p>';
        echo '<p><strong>Result Null:</strong> ' . (is_null($products) ? 'Yes' : 'No') . '</p>';

        if (is_object($products)) {
            echo '<p><strong>Result Methods:</strong></p>';
            echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($products))) . '</pre>';
        }

        echo '<p><strong>Raw Result:</strong></p>';
        echo '<pre>' . htmlspecialchars(print_r($products, true)) . '</pre>';
        echo '</div>';

        if (empty($products)) {
            echo '<div class="status warning">';
            echo '<h4>üì≠ Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o</h4>';
            echo '<p><strong>L√Ω do c√≥ th·ªÉ:</strong></p>';
            echo '<ul>';
            echo '<li>ProductModule::search() ch∆∞a implement API call th·∫≠t</li>';
            echo '<li>API Nhanh.vn tr·∫£ v·ªÅ empty data</li>';
            echo '<li>Collection object r·ªóng</li>';
            echo '</ul>';
            echo '</div>';
        } else {
            echo '<div class="status success">';
            echo '<h4>üì¶ T√¨m th·∫•y ' . count($products) . ' s·∫£n ph·∫©m</h4>';
            echo '</div>';

            echo '<div class="products-list">';
            foreach ($products as $index => $product) {
                $num = $index + 1;
                echo '<div class="product-item">';
                echo '<h5>' . $num . '. ' . htmlspecialchars($product->getName()) . '</h5>';
                echo '<ul>';
                echo '<li><strong>ID:</strong> ' . htmlspecialchars($product->getId() ?? 'N/A') . '</li>';
                echo '<li><strong>M√£:</strong> ' . htmlspecialchars($product->getCode() ?? 'N/A') . '</li>';
                echo '<li><strong>Gi√°:</strong> ' . number_format($product->getPrice() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>T·ªìn kho:</strong> ' . $product->getAvailableQuantity() . ' / ' . $product->getTotalQuantity() . '</li>';
                echo '<li><strong>Danh m·ª•c:</strong> ' . htmlspecialchars($product->getCategoryName() ?? 'N/A') . '</li>';
                echo '<li><strong>Tr·∫°ng th√°i:</strong> ' . ($product->isActive() ? '‚úÖ Ho·∫°t ƒë·ªông' : '‚ùå Kh√¥ng ho·∫°t ƒë·ªông') . '</li>';
                echo '</ul>';
                echo '</div>';
            }
            echo '</div>';
        }
    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
    }

    echo '</div>';

} catch (Exception $e) {
    echo '<div class="status error">';
    echo '<h3>‚ùå L·ªói chung</h3>';
    echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
    echo '<p><strong>Stack trace:</strong></p>';
    echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
    echo '</div>';
}

// HTML footer
?>
        <div class="section">
            <h3>üîó Navigation</h3>
            <p><a href="index.php" class="btn btn-primary">üè† V·ªÅ trang ch·ªß</a></p>
            <p><a href="callback.php" class="btn btn-secondary">üîÑ Test OAuth Callback</a></p>
        </div>
    </div>
</body>
</html>
