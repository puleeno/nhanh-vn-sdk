<?php
/**
 * Example: L·∫•y chi ti·∫øt s·∫£n ph·∫©m t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK
 */

require_once __DIR__ . '/../boot/client.php';

use Puleeno\NhanhVn\Entities\Product\Product;

// HTML header
?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üîç L·∫•y chi ti·∫øt s·∫£n ph·∫©m t·ª´ Nhanh.vn API</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>üîç L·∫•y chi ti·∫øt s·∫£n ph·∫©m t·ª´ Nhanh.vn API s·ª≠ d·ª•ng SDK</h1>
        <hr>

        <div class="section">
            <h2>üìã Th√¥ng tin Debug</h2>
            <div class="debug-info">
                <p><strong>Script:</strong> <?php echo htmlspecialchars(__FILE__); ?></p>
                <p><strong>Time:</strong> <?php echo date('Y-m-d H:i:s'); ?></p>
                <p><strong>PHP Version:</strong> <?php echo PHP_VERSION; ?></p>
            </div>
        </div>

<?php

try {
    // Ki·ªÉm tra xem client c√≥ s·∫µn s√†ng kh√¥ng
    if (!isClientReady()) {
        echo '<div class="status error">';
        echo '<h3>‚ùå Ch∆∞a c√≥ access token</h3>';
        echo '<p>H√£y ch·∫°y OAuth flow tr∆∞·ªõc!</p>';
        echo '<p><a href="index.php" class="btn btn-primary">üîê Ch·∫°y OAuth Flow</a></p>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }

    // Hi·ªÉn th·ªã th√¥ng tin client
    $clientInfo = getClientInfo();
    echo '<div class="status success">';
    echo '<h3>‚úÖ ƒê√£ c√≥ access token</h3>';
    echo '<p><strong>Token:</strong> ' . htmlspecialchars($clientInfo['accessTokenPreview']) . '</p>';
    echo '</div>';

    // Kh·ªüi t·∫°o SDK client
    echo '<div class="section">';
    echo '<h3>üöÄ Kh·ªüi t·∫°o SDK Client</h3>';

    try {
        // S·ª≠ d·ª•ng boot file ƒë·ªÉ kh·ªüi t·∫°o client
        $client = bootNhanhVnClientSilent();

        echo '<div class="status success">';
        echo '<h4>‚úÖ SDK client ƒë√£ s·∫µn s√†ng!</h4>';
        echo '<p><strong>Logger:</strong> NullLogger (kh√¥ng log)</p>';
        echo '</div>';

    } catch (Exception $e) {
        echo '<div class="status error">';
        echo '<h4>‚ùå L·ªói kh·ªüi t·∫°o SDK</h4>';
        echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
        echo '<p><strong>Stack trace:</strong></p>';
        echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
        echo '</div>';
        echo '</div></body></html>';
        exit(1);
    }
    echo '</div>';

    // Form nh·∫≠p Product ID
    echo '<div class="section">';
    echo '<h3>üîç Nh·∫≠p Product ID</h3>';
    echo '<form method="POST" class="form-group">';
    echo '<label for="product_id">Product ID:</label>';
    echo '<input type="number" id="product_id" name="product_id" placeholder="Nh·∫≠p Product ID (VD: 5003116)" required>';
    echo '<button type="submit" class="btn btn-primary">üîç L·∫•y Chi Ti·∫øt S·∫£n Ph·∫©m</button>';
    echo '</form>';
    echo '</div>';

    // X·ª≠ l√Ω form submit
    if ($_POST && isset($_POST['product_id']) && !empty($_POST['product_id'])) {
        $productId = (int) $_POST['product_id'];

        echo '<div class="section">';
        echo '<h3>üîÑ L·∫•y chi ti·∫øt s·∫£n ph·∫©m qua SDK</h3>';

        try {
            // DEBUG: Ki·ªÉm tra Product module
            echo '<div class="debug-info">';
            echo '<h4>üîç Debug Product Module:</h4>';

            $productModule = $client->products();
            echo '<p><strong>Product Module Class:</strong> ' . get_class($productModule) . '</p>';
            echo '<p><strong>Product Module Methods:</strong></p>';
            echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($productModule))) . '</pre>';
            echo '</div>';

            // DEBUG: Ki·ªÉm tra detail method
            echo '<div class="debug-info">';
            echo '<h4>üîç Debug Detail Method:</h4>';
            echo '<p><strong>Product ID:</strong> ' . $productId . '</p>';
            echo '<p><strong>Product ID Type:</strong> ' . gettype($productId) . '</p>';
            echo '</div>';

            // S·ª≠ d·ª•ng Product module c·ªßa SDK
            echo '<div class="debug-info">';
            echo '<h4>üîÑ ƒêang g·ªçi ProductModule::detail()...</h4>';
            echo '</div>';

            $product = $client->products()->detail($productId);

            // DEBUG: Ki·ªÉm tra k·∫øt qu·∫£ tr·∫£ v·ªÅ
            echo '<div class="debug-info">';
            echo '<h4>üîç Debug Detail Result:</h4>';
            echo '<p><strong>Result Type:</strong> ' . gettype($product) . '</p>';
            echo '<p><strong>Result Class:</strong> ' . (is_object($product) ? get_class($product) : 'N/A') . '</p>';
            echo '<p><strong>Result Null:</strong> ' . (is_null($product) ? 'Yes' : 'No') . '</p>';
            echo '<p><strong>Result Empty:</strong> ' . (empty($product) ? 'Yes' : 'No') . '</p>';

            if (is_object($product)) {
                echo '<p><strong>Result Methods:</strong></p>';
                echo '<pre>' . htmlspecialchars(implode(', ', get_class_methods($product))) . '</pre>';
            }

            echo '<p><strong>Raw Result:</strong></p>';
            echo '<pre>' . htmlspecialchars(print_r($product, true)) . '</pre>';
            echo '</div>';

            if ($product) {
                echo '<div class="status success">';
                echo '<h4>‚úÖ Th√†nh c√¥ng! ƒê√£ l·∫•y ƒë∆∞·ª£c chi ti·∫øt s·∫£n ph·∫©m</h4>';
                echo '</div>';

                // Hi·ªÉn th·ªã th√¥ng tin s·∫£n ph·∫©m
                echo '<div class="section">';
                echo '<h3>üìã Chi Ti·∫øt S·∫£n Ph·∫©m</h3>';

                echo '<div class="product-item">';
                echo '<h4>' . htmlspecialchars($product->getName() ?? 'N/A') . '</h4>';
                echo '<ul>';
                echo '<li><strong>ID Nhanh:</strong> ' . htmlspecialchars($product->getIdNhanh() ?? 'N/A') . '</li>';
                echo '<li><strong>M√£ s·∫£n ph·∫©m:</strong> ' . htmlspecialchars($product->getCode() ?? 'N/A') . '</li>';
                echo '<li><strong>T√™n kh√°c:</strong> ' . htmlspecialchars($product->getOtherName() ?? 'N/A') . '</li>';
                echo '<li><strong>M√£ v·∫°ch:</strong> ' . htmlspecialchars($product->getBarcode() ?? 'N/A') . '</li>';
                echo '<li><strong>Gi√° nh·∫≠p:</strong> ' . number_format($product->getImportPrice() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>Gi√° c≈©:</strong> ' . number_format($product->getOldPrice() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>Gi√° b√°n l·∫ª:</strong> ' . number_format($product->getPrice() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>Gi√° b√°n bu√¥n:</strong> ' . number_format($product->getWholesalePrice() ?? 0) . ' VNƒê</li>';
                echo '<li><strong>Thu·∫ø VAT:</strong> ' . ($product->getVat() ?? 0) . '%</li>';
                echo '<li><strong>Danh m·ª•c ID:</strong> ' . htmlspecialchars($product->getCategoryId() ?? 'N/A') . '</li>';
                echo '<li><strong>Th∆∞∆°ng hi·ªáu ID:</strong> ' . htmlspecialchars($product->getBrandId() ?? 'N/A') . '</li>';
                echo '<li><strong>T√™n th∆∞∆°ng hi·ªáu:</strong> ' . htmlspecialchars($product->getBrandName() ?? 'N/A') . '</li>';
                echo '<li><strong>Lo·∫°i s·∫£n ph·∫©m ID:</strong> ' . htmlspecialchars($product->getTypeId() ?? 'N/A') . '</li>';
                echo '<li><strong>T√™n lo·∫°i:</strong> ' . htmlspecialchars($product->getTypeName() ?? 'N/A') . '</li>';
                echo '<li><strong>Parent ID:</strong> ' . htmlspecialchars($product->getParentId() ?? 'N/A') . '</li>';
                echo '<li><strong>Chi·ªÅu r·ªông:</strong> ' . ($product->getWidth() ?? 0) . ' cm</li>';
                echo '<li><strong>Chi·ªÅu cao:</strong> ' . ($product->getHeight() ?? 0) . ' cm</li>';
                echo '<li><strong>Chi·ªÅu d√†i:</strong> ' . ($product->getLength() ?? 0) . ' cm</li>';
                echo '<li><strong>Tr·ªçng l∆∞·ª£ng:</strong> ' . ($product->getShippingWeight() ?? 0) . ' gram</li>';
                echo '<li><strong>Th·ªùi h·∫°n BH:</strong> ' . ($product->getWarranty() ?? 0) . ' th√°ng</li>';
                echo '<li><strong>ƒê·ªãa ch·ªâ BH:</strong> ' . htmlspecialchars($product->getWarrantyAddress() ?? 'N/A') . '</li>';
                echo '<li><strong>SƒêT BH:</strong> ' . htmlspecialchars($product->getWarrantyPhone() ?? 'N/A') . '</li>';
                echo '<li><strong>S·∫£n ph·∫©m hot:</strong> ' . ($product->getShowHot() ? '‚úÖ C√≥' : '‚ùå Kh√¥ng') . '</li>';
                echo '<li><strong>S·∫£n ph·∫©m m·ªõi:</strong> ' . ($product->getShowNew() ? '‚úÖ C√≥' : '‚ùå Kh√¥ng') . '</li>';
                echo '<li><strong>Hi·ªÉn th·ªã trang ch·ªß:</strong> ' . ($product->getShowHome() ? '‚úÖ C√≥' : '‚ùå Kh√¥ng') . '</li>';
                echo '<li><strong>Ng√†y t·∫°o:</strong> ' . htmlspecialchars($product->getCreatedDateTime() ?? 'N/A') . '</li>';
                echo '<li><strong>Xu·∫•t x·ª©:</strong> ' . htmlspecialchars($product->getCountryName() ?? 'N/A') . '</li>';
                echo '<li><strong>ƒê∆°n v·ªã t√≠nh:</strong> ' . htmlspecialchars($product->getUnit() ?? 'N/A') . '</li>';
                echo '<li><strong>Link preview:</strong> ' . ($product->getPreviewLink() ? '<a href="' . htmlspecialchars($product->getPreviewLink()) . '" target="_blank">üîó Xem s·∫£n ph·∫©m</a>' : 'N/A') . '</li>';
                echo '<li><strong>Tr·∫°ng th√°i:</strong> ' . ($product->getStatus() === 'Active' ? '‚úÖ Ho·∫°t ƒë·ªông' : '‚ùå Kh√¥ng ho·∫°t ƒë·ªông') . '</li>';
                echo '</ul>';
                echo '</div>';

                // Hi·ªÉn th·ªã h√¨nh ·∫£nh s·∫£n ph·∫©m
                if ($product->getImage() || $product->getImages()) {
                    echo '<div class="section">';
                    echo '<h4>üñºÔ∏è H√¨nh ·∫¢nh S·∫£n Ph·∫©m</h4>';
                    if ($product->getImage()) {
                        echo '<p><strong>·∫¢nh ch√≠nh:</strong> <img src="' . htmlspecialchars($product->getImage()) . '" alt="·∫¢nh ch√≠nh" style="max-width: 200px; max-height: 200px;"></p>';
                    }
                    if ($product->getImages() && is_array($product->getImages())) {
                        echo '<p><strong>·∫¢nh kh√°c:</strong></p>';
                        foreach ($product->getImages() as $image) {
                            echo '<img src="' . htmlspecialchars($image) . '" alt="·∫¢nh s·∫£n ph·∫©m" style="max-width: 150px; max-height: 150px; margin: 5px;">';
                        }
                    }
                    echo '</div>';
                }

                // Hi·ªÉn th·ªã th√¥ng tin t·ªìn kho
                if ($product->getInventory()) {
                    echo '<div class="section">';
                    echo '<h4>üì¶ Th√¥ng Tin T·ªìn Kho</h4>';
                    $inventory = $product->getInventory();
                    if (is_array($inventory)) {
                        echo '<ul>';
                        echo '<li><strong>T·ªïng t·ªìn:</strong> ' . ($inventory['remain'] ?? 0) . '</li>';
                        echo '<li><strong>ƒêang giao:</strong> ' . ($inventory['shipping'] ?? 0) . '</li>';
                        echo '<li><strong>T·∫°m gi·ªØ:</strong> ' . ($inventory['holding'] ?? 0) . '</li>';
                        echo '<li><strong>L·ªói:</strong> ' . ($inventory['damage'] ?? 0) . '</li>';
                        echo '<li><strong>C√≥ th·ªÉ b√°n:</strong> ' . ($inventory['available'] ?? 0) . '</li>';
                        echo '<li><strong>B·∫£o h√†nh:</strong> ' . ($inventory['warranty'] ?? 0) . '</li>';
                        echo '</ul>';
                    }
                    echo '</div>';
                }

            } else {
                echo '<div class="status warning">';
                echo '<h4>üì≠ Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m</h4>';
                echo '<p><strong>L√Ω do c√≥ th·ªÉ:</strong></p>';
                echo '<ul>';
                echo '<li>ProductModule::detail() ch∆∞a implement API call th·∫≠t</li>';
                echo '<li>API Nhanh.vn tr·∫£ v·ªÅ empty data</li>';
                echo '<li>Product ID kh√¥ng t·ªìn t·∫°i</li>';
                echo '</ul>';
                echo '</div>';
            }

        } catch (Exception $e) {
            echo '<div class="status error">';
            echo '<h4>‚ùå L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m</h4>';
            echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
            echo '<p><strong>Stack trace:</strong></p>';
            echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
            echo '</div>';
        }

        echo '</div>';
    }

} catch (Exception $e) {
    echo '<div class="status error">';
    echo '<h3>‚ùå L·ªói chung</h3>';
    echo '<p><strong>Error:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
    echo '<p><strong>Stack trace:</strong></p>';
    echo '<pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
    echo '</div>';
}

// HTML footer
?>
        <div class="section">
            <h3>üîó Navigation</h3>
            <p><a href="index.php" class="btn btn-primary">üè† V·ªÅ trang ch·ªß</a></p>
            <p><a href="get_products.php" class="btn btn-secondary">üì¶ Danh s√°ch s·∫£n ph·∫©m</a></p>
            <p><a href="callback.php" class="btn btn-secondary">üîÑ Test OAuth Callback</a></p>
        </div>
    </div>
</body>
</html>
